/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyectopichardo;

import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author oem
 */
public class HacerVenta extends javax.swing.JFrame {

    /**
     * Creates new form HacerVenta
     */
    public HacerVenta() {
        initComponents();
        // Limpiar los Items del ComboBox
    jComboBox1.removeAllItems();

    // Llenar ComboBox con libros disponibles
    for (LibroV libro : ProyectoPichardo.getLibrosv()) {
        jComboBox1.addItem(libro.titulo);
    }

    // Configurar columnas del JTable
    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("Título");
    modelo.addColumn("Precio");
    modelo.addColumn("Cantidad"); // La cantidad siempre será 1 cada vez que selecciones
    jTable1.setModel(modelo);

    // Escuchar selección del ComboBox
    jComboBox1.addActionListener(e -> agregarLibroAVenta());
    }
    
    private void agregarLibroAVenta() {
    String tituloSeleccionado = (String) jComboBox1.getSelectedItem();

    if (tituloSeleccionado == null) {
        return;
    }

    for (LibroV libro : ProyectoPichardo.getLibrosv()) {
        if (libro.titulo.equalsIgnoreCase(tituloSeleccionado)) {
            if (libro.stock > 0) {
                // Agregar al JTable
                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.addRow(new Object[]{libro.titulo, libro.precio, 1});

                // Reducir el stock
                libro.stock--;

                // Mensaje de cuántos libros quedan
                JOptionPane.showMessageDialog(this, "Quedan " + libro.stock + " unidades de " + libro.titulo);

                // Si ya no hay stock, mostrar mensaje
                if (libro.stock == 0) {
                    JOptionPane.showMessageDialog(this, "Ya no hay stock de " + libro.titulo);
                }
            } else {
                // Ya no hay stock
                JOptionPane.showMessageDialog(this, "Ya no hay stock de " + libro.titulo);
            }
            break; // Ya encontramos el libro
        }
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Escoger Libros");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("Hacer venta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jTable1.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "No hay libros en la venta.");
        return;
    }

    // Pedir datos del cliente
    String nombreCliente = JOptionPane.showInputDialog(this, "Ingrese el nombre del cliente:");
    String nitCliente = JOptionPane.showInputDialog(this, "Ingrese el NIT del cliente:");
    String direccionCliente = JOptionPane.showInputDialog(this, "Ingrese la dirección del cliente:");

    if (nombreCliente == null || nitCliente == null || direccionCliente == null) {
        JOptionPane.showMessageDialog(this, "Venta cancelada.");
        return;
    }

    // Calcular totales
    double totalConIVA = 0;
    for (int i = 0; i < jTable1.getRowCount(); i++) {
        double precio = (double) jTable1.getValueAt(i, 1);
        totalConIVA += precio;
    }
    totalConIVA = Math.round(totalConIVA * 100.0) / 100.0;
    double totalSinIVA = Math.round((totalConIVA / 1.12) * 100.0) / 100.0;

    // Obtener vendedor (quien inició sesión)
    String nombreVendedor = ProyectoPichardo.getUsuarioActual().getNombre(); // Este método lo vamos a crear si no existe

    // Obtener fecha actual
    Calendar fechaActual = Calendar.getInstance();

    // Crear objeto Venta
    Venta nuevaVenta = new Venta();
    nuevaVenta.nombre = nombreCliente;
    nuevaVenta.nit = nitCliente;
    nuevaVenta.direccion = direccionCliente;
    nuevaVenta.total = totalConIVA;
    nuevaVenta.vendedor = nombreVendedor;
    nuevaVenta.fecha = fechaActual;

    // Guardar venta en la lista
    ProyectoPichardo.getVentas().add(nuevaVenta);

    // Mostrar factura
    String factura = "Factura\n\n" +
                     "Nombre: " + nombreCliente + "\n" +
                     "NIT: " + nitCliente + "\n" +
                     "Dirección: " + direccionCliente + "\n" +
                     "Vendedor: " + nombreVendedor + "\n" +
                     "Fecha: " + fechaActual.getTime().toString() + "\n" +
                     "Total (con IVA): Q" + totalConIVA + "\n" +
                     "Total (sin IVA): Q" + totalSinIVA;

    JOptionPane.showMessageDialog(this, factura);

    // Opcional: limpiar la tabla
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    modelo.setRowCount(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
